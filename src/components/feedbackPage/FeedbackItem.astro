---
import type { FeedbackItem } from "../../data/feedback";
import { FEEDBACK_STATUSES } from "../../data/feedback";
import Badge from "../ui/Badge.astro";
import VoteButton from "./VoteButton";

interface Props {
  item: FeedbackItem;
}

const { item } = Astro.props;
---

<div
  class="feedback-item border-b border-[#D9E2EC] p-6 flex items-center"
  data-title={item.title.toLowerCase()}
  data-description={item.description.toLowerCase()}
>
  <!-- Content -->
  <div class="flex-1">
    <h3 class="text-[#102A43] font-medium mb-1">{item.title}</h3>
    {
      item.description.length > 0 && (
        <p class="text-sm text-[#486581] mb-3 line-clamp-2">
          {item.description}
        </p>
      )
    }

    <!-- Comments & status -->
    <div class="flex items-center text-xs space-x-2">
      <svg
        xmlns="http://www.w3.org/2000/svg"
        class="h-4 w-4 text-[#627D98] mr-1"
        fill="none"
        viewBox="0 0 24 24"
        stroke="currentColor"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z"
        ></path>
      </svg>
      <span class="text-[#627D98]">{item.comments}</span>
      {item.status && <span class="text-[#627D98]">&middot;</span>}
      {
        item.status && (
          <Badge
            text={FEEDBACK_STATUSES[item.status].label}
            variant={item.status}
            className="rounded-full px-2 py-0.5 text-xs font-medium"
          />
        )
      }
    </div>
  </div>

  <!-- Vote button using shadcn/ui with confetti effect -->
  <div class="flex flex-col items-center justify-center ml-4 self-center">
    <VoteButton votes={item.votes} client:load />
  </div>
</div>
