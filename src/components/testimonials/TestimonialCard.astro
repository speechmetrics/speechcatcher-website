---
interface Props {
  name: string;
  role: string;
  organization: string;
  quote: string;
  image?: string;
}

const { name, role, organization, quote, image } = Astro.props;
---

<div
  class="flex flex-col space-y-4 rounded-xl border bg-card p-6 text-card-foreground shadow transition-all hover:shadow-md"
>
  <div class="relative">
    <svg
      class="absolute -left-2 -top-2 h-8 w-8 text-primary/30"
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="currentColor"
    >
      <path
        d="M13 14.725c0-5.141 3.892-10.519 10-11.725l.984 2.126c-2.215.835-4.163 3.742-4.38 5.746 2.491.392 4.396 2.547 4.396 5.149 0 3.182-2.584 4.979-5.199 4.979-3.015 0-5.801-2.305-5.801-6.275zm-13 0c0-5.141 3.892-10.519 10-11.725l.984 2.126c-2.215.835-4.163 3.742-4.38 5.746 2.491.392 4.396 2.547 4.396 5.149 0 3.182-2.584 4.979-5.199 4.979-3.015 0-5.801-2.305-5.801-6.275z"
      ></path>
    </svg>
    <p class="pl-6 italic text-muted-foreground">
      {quote}
    </p>
  </div>

  <div class="flex items-center space-x-4 mt-auto pt-4 border-t">
    <div class="flex-shrink-0">
      {
        image ? (
          <img
            src={image}
            alt={`${name} testimonial`}
            class="h-10 w-10 rounded-full object-cover"
          />
        ) : (
          <div class="flex h-10 w-10 rounded-full bg-primary/10 items-center justify-center">
            <span class="text-sm font-medium text-primary">
              {name.charAt(0)}
            </span>
          </div>
        )
      }
    </div>
    <div>
      <p class="text-sm font-medium">{name}</p>
      <p class="text-xs text-muted-foreground">{role}, {organization}</p>
    </div>
  </div>
</div>
